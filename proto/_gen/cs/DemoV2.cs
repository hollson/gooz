// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: demo_v2.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace User.Player {

  /// <summary>Holder for reflection information generated from demo_v2.proto</summary>
  public static partial class DemoV2Reflection {

    #region Descriptor
    /// <summary>File descriptor for demo_v2.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DemoV2Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1kZW1vX3YyLnByb3RvIo0BCgZwbGF5ZXISCgoCaWQYASACKAMSDAoEbmFt",
            "ZRgCIAIoCRILCgNhZ2UYAyACKAUSGQoDc2V4GAQgAigOMgQuU2V4OgZmZW1h",
            "bGUSCwoDdmlwGAUgAigIEg0KBXBob25lGAYgASgJEg0KBWhvYmJ5GAcgAygJ",
            "Eg8KB2JhbGFuY2UYCCACKAIqBQhkEMgBKhsKA1NleBIKCgZmZW1hbGUQARII",
            "CgRtYWxlEAJCLwoQY29tLmdvb2dsZS5wcm90b0IEVXNlcloHLi87dXNlcqoC",
            "C1VzZXIuUGxheWVy"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::User.Player.Sex), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::User.Player.player), global::User.Player.player.Parser, new[]{ "Id", "Name", "Age", "Sex", "Vip", "Phone", "Hobby", "Balance" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 枚举
  /// </summary>
  public enum Sex {
    [pbr::OriginalName("female")] Female = 1,
    [pbr::OriginalName("male")] Male = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 结构体(整型，字符串，布尔，浮点，数组，字典，枚举)
  /// required: 必须项
  /// optional: 可选项
  /// repeated: 重复(数组)
  /// </summary>
  public sealed partial class player : pb::IExtendableMessage<player>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<player> _parser = new pb::MessageParser<player>(() => new player());
    private pb::UnknownFieldSet _unknownFields;
    private pb::ExtensionSet<player> _extensions;
    private pb::ExtensionSet<player> _Extensions { get { return _extensions; } }
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::User.Player.DemoV2Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public player(player other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      age_ = other.age_;
      sex_ = other.sex_;
      vip_ = other.vip_;
      phone_ = other.phone_;
      hobby_ = other.hobby_.Clone();
      balance_ = other.balance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      _extensions = pb::ExtensionSet.Clone(other._extensions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public player Clone() {
      return new player(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static long IdDefaultValue = 0L;

    private long id_;
    /// <summary>
    /// 编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// 姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 3;
    private readonly static int AgeDefaultValue = 0;

    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Age {
      get { if ((_hasBits0 & 2) != 0) { return age_; } else { return AgeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        age_ = value;
      }
    }
    /// <summary>Gets whether the "age" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAge {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "age" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAge() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 4;
    private readonly static global::User.Player.Sex SexDefaultValue = global::User.Player.Sex.Female;

    private global::User.Player.Sex sex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::User.Player.Sex Sex {
      get { if ((_hasBits0 & 4) != 0) { return sex_; } else { return SexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        sex_ = value;
      }
    }
    /// <summary>Gets whether the "sex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "sex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 5;
    private readonly static bool VipDefaultValue = false;

    private bool vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Vip {
      get { if ((_hasBits0 & 8) != 0) { return vip_; } else { return VipDefaultValue; } }
      set {
        _hasBits0 |= 8;
        vip_ = value;
      }
    }
    /// <summary>Gets whether the "vip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVip {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "vip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVip() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 6;
    private readonly static string PhoneDefaultValue = "";

    private string phone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Phone {
      get { return phone_ ?? PhoneDefaultValue; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPhone {
      get { return phone_ != null; }
    }
    /// <summary>Clears the value of the "phone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPhone() {
      phone_ = null;
    }

    /// <summary>Field number for the "hobby" field.</summary>
    public const int HobbyFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_hobby_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> hobby_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Hobby {
      get { return hobby_; }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 8;
    private readonly static float BalanceDefaultValue = 0F;

    private float balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Balance {
      get { if ((_hasBits0 & 16) != 0) { return balance_; } else { return BalanceDefaultValue; } }
      set {
        _hasBits0 |= 16;
        balance_ = value;
      }
    }
    /// <summary>Gets whether the "balance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBalance {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "balance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBalance() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Age != other.Age) return false;
      if (Sex != other.Sex) return false;
      if (Vip != other.Vip) return false;
      if (Phone != other.Phone) return false;
      if(!hobby_.Equals(other.hobby_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Balance, other.Balance)) return false;
      if (!Equals(_extensions, other._extensions)) {
        return false;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasAge) hash ^= Age.GetHashCode();
      if (HasSex) hash ^= Sex.GetHashCode();
      if (HasVip) hash ^= Vip.GetHashCode();
      if (HasPhone) hash ^= Phone.GetHashCode();
      hash ^= hobby_.GetHashCode();
      if (HasBalance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Balance);
      if (_extensions != null) {
        hash ^= _extensions.GetHashCode();
      }
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasAge) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      if (HasSex) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Sex);
      }
      if (HasVip) {
        output.WriteRawTag(40);
        output.WriteBool(Vip);
      }
      if (HasPhone) {
        output.WriteRawTag(50);
        output.WriteString(Phone);
      }
      hobby_.WriteTo(output, _repeated_hobby_codec);
      if (HasBalance) {
        output.WriteRawTag(69);
        output.WriteFloat(Balance);
      }
      if (_extensions != null) {
        _extensions.WriteTo(output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasAge) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      if (HasSex) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Sex);
      }
      if (HasVip) {
        output.WriteRawTag(40);
        output.WriteBool(Vip);
      }
      if (HasPhone) {
        output.WriteRawTag(50);
        output.WriteString(Phone);
      }
      hobby_.WriteTo(ref output, _repeated_hobby_codec);
      if (HasBalance) {
        output.WriteRawTag(69);
        output.WriteFloat(Balance);
      }
      if (_extensions != null) {
        _extensions.WriteTo(ref output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasAge) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (HasSex) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sex);
      }
      if (HasVip) {
        size += 1 + 1;
      }
      if (HasPhone) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      size += hobby_.CalculateSize(_repeated_hobby_codec);
      if (HasBalance) {
        size += 1 + 4;
      }
      if (_extensions != null) {
        size += _extensions.CalculateSize();
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(player other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasAge) {
        Age = other.Age;
      }
      if (other.HasSex) {
        Sex = other.Sex;
      }
      if (other.HasVip) {
        Vip = other.Vip;
      }
      if (other.HasPhone) {
        Phone = other.Phone;
      }
      hobby_.Add(other.hobby_);
      if (other.HasBalance) {
        Balance = other.Balance;
      }
      pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            }
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
          case 32: {
            Sex = (global::User.Player.Sex) input.ReadEnum();
            break;
          }
          case 40: {
            Vip = input.ReadBool();
            break;
          }
          case 50: {
            Phone = input.ReadString();
            break;
          }
          case 58: {
            hobby_.AddEntriesFrom(input, _repeated_hobby_codec);
            break;
          }
          case 69: {
            Balance = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            }
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
          case 32: {
            Sex = (global::User.Player.Sex) input.ReadEnum();
            break;
          }
          case 40: {
            Vip = input.ReadBool();
            break;
          }
          case 50: {
            Phone = input.ReadString();
            break;
          }
          case 58: {
            hobby_.AddEntriesFrom(ref input, _repeated_hobby_codec);
            break;
          }
          case 69: {
            Balance = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    public TValue GetExtension<TValue>(pb::Extension<player, TValue> extension) {
      return pb::ExtensionSet.Get(ref _extensions, extension);
    }
    public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<player, TValue> extension) {
      return pb::ExtensionSet.Get(ref _extensions, extension);
    }
    public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<player, TValue> extension) {
      return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
    }
    public void SetExtension<TValue>(pb::Extension<player, TValue> extension, TValue value) {
      pb::ExtensionSet.Set(ref _extensions, extension, value);
    }
    public bool HasExtension<TValue>(pb::Extension<player, TValue> extension) {
      return pb::ExtensionSet.Has(ref _extensions, extension);
    }
    public void ClearExtension<TValue>(pb::Extension<player, TValue> extension) {
      pb::ExtensionSet.Clear(ref _extensions, extension);
    }
    public void ClearExtension<TValue>(pb::RepeatedExtension<player, TValue> extension) {
      pb::ExtensionSet.Clear(ref _extensions, extension);
    }

  }

  #endregion

}

#endregion Designer generated code
